class Solution {
public:
    long long func(vector<int>& piles, long long mid)
    {
        long long ans=0;
        for(auto it: piles)
            ans+=(ceil((double)(it)/(double)(mid)));
        return ans;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        long long low=1, high=*max_element(piles.begin(), piles.end());

        if(piles.size()==h)
        return high;
        while(low<=high)
        {
            long long mid=(low+high)/2;
            long long b=func(piles, mid);
            if(b<=h)
                high=mid-1;
            else
                low=mid+1;
        }
        return low;
    }
};
