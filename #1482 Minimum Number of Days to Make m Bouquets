class Solution {
public:
    long long func(vector<int>& bloomDay, long long mid,long long k)
    {
        long long cnt=0, ans=0;
        for(long long i=0; i<bloomDay.size(); i++)
        {
            if(bloomDay[i]<=mid)
            cnt++;
            else
            {
                ans+=(cnt/k);
                cnt=0;
            }
        }
        ans+=(cnt/k);
        return ans;
    }
    int minDays(vector<int>& bloomDay, int m, int k) {
        long long size=bloomDay.size();
        long long low=*min_element(bloomDay.begin(),bloomDay.end()), high=*max_element(bloomDay.begin(), bloomDay.end());
        long long mult= (long long)(m) * (long long)(k);
        if(mult > size)
        return -1;
        else if(mult == size)
        return high;
        while(low<=high)
        {
            long long mid=(low+high)/2;
            long long ans=func(bloomDay,mid,k);
            if(ans>=(long long)(m))
                high=mid-1;
            else
                low=mid+1;
        }
        return low;
    }
};
