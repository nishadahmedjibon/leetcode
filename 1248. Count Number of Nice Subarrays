//problem link: https://leetcode.com/problems/count-number-of-nice-subarrays/description/
class Solution {

public:
    int numberOfSubarrays(vector<int>& nums, int k) {
        return subarray(nums, k)-subarray(nums, k-1);
    }
private:
    int subarray(vector<int>&nums, int k)
    {
        int r=0, l=0, cnt=0,sum=0;
        while(r<nums.size())
        {
            cnt+=nums[r]%2;
            while(cnt>k)
            {
                cnt-= nums[l] % 2;
                l++;
            }
            sum+=r-l+1;
            r++;
        }
        return sum;
    }
};
